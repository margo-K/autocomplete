#BUG 2

##Code Snippet
```
1 def pprint(self):
2		printed = '|{}\n'.format(self)
3		if self.children:
4		# pdb.set_trace()
5			for child in self.children:
6				# pdb.set_trace()
7				printed+'-'+child.pprint()
8				print printed
9		return printed 
```
##Run-Context:
```
10 if __name__ == '__main__':
11	root = Node(None)
12	for word in ['hi','he','and','ant']:
13		root.insert(to_nodes(prefix(word)))
14	print root.pprint()
```

##Returns
```
|h

|h

|Root

|an

|an

|a

|Root

|Root
```

##Desired Output:
```
|Root
-|h
--|he
--|hi
-|a
--|an
---|and
___|ant
```


##Alterations 

Alt 1:
```
7: output = printed+'-'+child.pprint()
8: print output
```
Outputs:
```
|h
-|hi

|h
-|he

|Root
-|h

|an
-|and

|an
-|ant

|a
-|an

|Root
-|a

|Root

```
Alt 2: As above, but 

```
8: #<removed>
```
Outputs:
`
|Root

`
Conclusions: 
- Each of the outputs from Alt 1 is an iteration of the loop. Meaning that within the body of the thing, it is printing correctly, but it seems to not be returning earlier versions to the upper function (i.e. not appending to the proper list, perhaps)


Had some more bugs but eventually got to 

##Working Version:
```
1 def pprint(self):
2         printed = '|{}\n'.format(self)
3         if self.children:
4             for child in self.children:
5                 printed+='-'+child.pprint().replace('-','--')
6         return printed
```
##Returns:
|ROOT
-|h
--|hi
--|he
-|a
--|an
----|and
----|ant

Note: This wasn't entirely correct, because |and and |ant both have '---' instead of '----' (which gets insane when you're printing the entire whitman poem)

* Thought Whitman poem was printing repeats (or mal-printing words, because of Diagram 1 below, but turns out that 'wreaths--for' was a word, so I was actually multiplying the -- between words, to the point of incomprehensibility

##Modifications:
Replaced Line 5 so that it only replaced new lines with a new newline (no magnification)
I believe this works because here you are just adding a hyphen after the previous word's newline (i.e. to the front of the next word). 
```
1 def pprint(self):
2       printed = '\n|{}'.format(self)
3        if self.children:
4            for child in self.children:
5                printed+=child.pprint().replace('\n','\n-')
6       return printed
```


##To Test:
*Does the root ever get a -? If no ---> my hunch is that there is that an actual newline occurs after the escape sequence, so it is adding to the 'end' of one line (after the escape) which results in the beginning of the next line. 
*Does a series of hyphens'-' appear after the last word in the list? If no, why not? (seems like no) 
=> Seems like it's because I insert newlines at the beginning of a word ('printed' starts with a new line instead of finishing with one, as it was in the beginning). Thus the last word has no newline at its end and no -------- 
=> This seems to be confirmed by Diagram 2, which is returned when the '\n' is placed at the end of the word. (you both get '----' at the end and you get 'o' not having any hyphens before it).
=>Cause, Hypothesis: the replacement step only happens when something is the child of something else (so root never gets '\n-'') applied to it, only its first child (i.e. 'o') gets that applied to it. because in this case the newline is at the end of the word, its child gets the '-' instead of itself. pretty interesting 
##Returns[-1]:
```
-|y
--|yo
---|you
----|your
----|you'
-----|you'v
------|you've
```

__##Diagrams__

Diagram 1:
--|wr
----|wre
--------|wrea
----------------|wreat
--------------------------------|wreath
----------------------------------------------------------------|wreaths
--------------------------------------------------------------------------------------------------------------------------------|wreaths----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|wreaths
|wreathsf
etc.

__Diagram2:__

##Code:
```
    def pprint(self):
        printed = '|{}\n'.format(self)
        if self.children:
            for child in self.children:
                printed+=child.pprint().replace('\n','\n-')
        return printed
```

##Diagram:
|ROOT
|o
-|ou
--|our
---|of
--|on
--|ob
--|obj
---|obje
----|objec
-----|object
------|c
-|ca
--|cap
---|capt
----|capta
-----|captai
------|captain
-------|cal
---|call
----|co
--|col
---|cold
----|com
---|come
----|comes
-----|cl
--|clo
---|clos
----|close
-----|closed
------|m
-|my
--|ma
--|mas
---|mass
----|mo
--|mou
---|mour
----|mourn
-----|mournf
------|mournfu
-------|mournful
--------|f
-|fe
--|fea
---|fear
----|fearf
-----|fearfu
------|fearful
-------|fee
---|feel
----|fo
--|fol
---|foll
----|follo
-----|follow
------|for
---|fa
--|fal
---|fall
----|falle
-----|fallen
------|fac
---|face
----|faces
-----|fat
---|fath
----|fathe
-----|father
------|fl
--|fla
---|flag
----|flu
---|flun
----|flung
-----|flung-
------|flung--
-------|flung--f
--------|flung--fo
---------|flung--for
----------|fr
--|fro
---|from
----|t
-|tr
--|tri
---|trip
----|tril
----|trill
-----|trills
------|tre
---|trea
----|tread
-----|th
--|the
---|they
----|thei
----|their
-----|tha
---|that
----|tu
--|tur
---|turn
----|turni
-----|turnin
------|turning
-------|i
-|is
--|it
--|its
---|in
--|d
-|do
--|don
---|done
----|doe
---|does
----|da
--|dar
---|dari
----|darin
-----|daring
------|dr
--|dro
---|drop
----|drops
-----|dre
---|drea
----|dream
-----|de
--|dec
---|deck
----|dea
---|dead
----|dear
----|s
-|sh
--|shi
---|ship
----|sho
---|shor
----|shore
-----|shores
------|so
--|sou
---|soug
----|sough
-----|sought
------|soun
----|sound
-----|som
---|some
----|st
--|ste
---|stea
----|stead
-----|steady
------|sti
---|stil
----|still
-----|sw
--|swa
---|sway
----|swayi
-----|swayin
------|swaying
-------|sa
--|saf
---|safe
----|h
-|ha
--|has
---|he
--|hea
---|hear
----|heart
-----|head
----|her
---|here
----|hi
--|his
---|w
-|we
--|wea
---|weat
----|weath
-----|weathe
------|weather
-------|weather'
--------|weather'd
---------|wo
--|won
---|wh
--|whi
---|whil
----|while
-----|whe
---|wher
----|where
-----|wr
--|wre
---|wrea
----|wreat
-----|wreath
------|wreaths
-------|wreaths-
--------|wreaths--
---------|wreaths--f
----------|wreaths--fo
-----------|wreaths--for
------------|wi
--|wil
---|will
----|wit
---|with
----|wa
--|wal
---|walk
----|e
-|ev
--|eve
---|ever
----|every
-----|ex
--|exu
---|exul
----|exult
-----|exulti
------|exultin
-------|exulting
--------|ey
--|eye
---|eyes
----|ea
--|eag
---|eage
----|eager
-----|r
-|ra
--|rac
---|rack
----|re
--|red
---|ri
--|ris
---|rise
----|rib
---|ribb
----|ribbo
-----|ribbon
------|ribbon'
-------|ribbon'd
--------|rin
---|ring
----|p
-|pr
--|pri
---|priz
----|prize
-----|po
--|por
---|port
----|pe
--|peo
---|peop
----|peopl
-----|people
------|pa
--|pal
---|pale
----|pu
--|pul
---|puls
----|pulse
-----|n
-|ne
--|nea
---|near
----|no
--|not
---|nor
---|b
-|be
--|bel
---|bell
----|bells
-----|ben
---|bene
----|benea
-----|beneat
------|beneath
-------|bu
--|but
---|bug
---|bugl
----|bugle
-----|bl
--|ble
---|blee
----|bleed
-----|bleedi
------|bleedin
-------|bleeding
--------|bo
--|bou
---|bouq
----|bouqu
-----|bouque
------|bouquet
-------|bouquets
--------|a
-|al
--|all
---|an
--|and
---|ans
---|answ
----|answe
-----|answer
------|anc
---|anch
----|ancho
-----|anchor
------|anchor'
-------|anchor'd
--------|a-
--|a-c
---|a-cr
----|a-cro
-----|a-crow
------|a-crowd
-------|a-crowdi
--------|a-crowdin
---------|a-crowding
----------|ar
--|arm
---|are
---|k
-|ke
--|kee
---|keel
----|v
-|ve
--|ves
---|vess
----|vesse
-----|vessel
------|vo
--|voy
---|voya
----|voyag
-----|voyage
------|vi
--|vic
---|vict
----|victo
-----|victor
------|g
-|gr
--|gri
---|grim
----|l
-|li
--|lie
---|lies
----|lip
---|lips
----|u
-|up
--|up-
---|up--
----|up--f
-----|up--fo
------|up--for
-------|y
-|yo
--|you
---|your
----|you'
----|you'v
-----|you've
------
